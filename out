instruction memory:
	instrMem[ 0 ]	= 0x00810009	= 8454153	= lw 0 1 9
	instrMem[ 1 ]	= 0x0082000a	= 8519690	= lw 0 2 10
	instrMem[ 2 ]	= 0x000a0003	= 655363	= add 1 2 3
	instrMem[ 3 ]	= 0x000b0004	= 720900	= add 1 3 4
	instrMem[ 4 ]	= 0x00610005	= 6356997	= nor 4 1 5
	instrMem[ 5 ]	= 0x00c5000a	= 12910602	= sw 0 5 10
	instrMem[ 6 ]	= 0x0086000a	= 8781834	= lw 0 6 10
	instrMem[ 7 ]	= 0x00c60009	= 12976137	= sw 0 6 9
	instrMem[ 8 ]	= 0x01800000	= 25165824	= halt
	instrMem[ 9 ]	= 0x00000001	= 1	= add 0 0 1
	instrMem[ 10 ]	= 0x00000005	= 5	= add 0 0 5

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		pcPlus1 = 1
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 9
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 655363 ( add 1 2 3 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 10
	EX/MEM pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		branchTarget 10 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 9
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 655363 ( add 1 2 3 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 2 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 10 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		branchTarget 12 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 10
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		writeData = 1
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 5 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 720900 ( add 1 3 4 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 655363 ( add 1 2 3 )
		pcPlus1 = 3
		readRegA = 0
		readRegB = 0
		offset = 3 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 12 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 10 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		writeData = 5
	WB/END pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		writeData = 1
end state

@@@
state before cycle 6 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 5
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 6356997 ( nor 4 1 5 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 720900 ( add 1 3 4 )
		pcPlus1 = 4
		readRegA = 1
		readRegB = 0
		offset = 4 (Don't Care)
	EX/MEM pipeline register:
		instruction = 655363 ( add 1 2 3 )
		branchTarget 6 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 6
		readRegB = 5 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 10 (Don't Care)
	WB/END pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		writeData = 5
end state

@@@
state before cycle 7 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 5
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 12910602 ( sw 0 5 10 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 6356997 ( nor 4 1 5 )
		pcPlus1 = 5
		readRegA = 0
		readRegB = 1
		offset = 5 (Don't Care)
	EX/MEM pipeline register:
		instruction = 720900 ( add 1 3 4 )
		branchTarget 8 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 7
		readRegB = 6 (Don't Care)
	MEM/WB pipeline register:
		instruction = 655363 ( add 1 2 3 )
		writeData = 6
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 10 (Don't Care)
end state

@@@
state before cycle 8 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 5
		reg[ 3 ] = 6
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8781834 ( lw 0 6 10 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 12910602 ( sw 0 5 10 )
		pcPlus1 = 6
		readRegA = 0
		readRegB = 0
		offset = 10
	EX/MEM pipeline register:
		instruction = 6356997 ( nor 4 1 5 )
		branchTarget 10 (Don't Care)
		eq ? False (Don't Care)
		aluResult = -8
		readRegB = 1 (Don't Care)
	MEM/WB pipeline register:
		instruction = 720900 ( add 1 3 4 )
		writeData = 7
	WB/END pipeline register:
		instruction = 655363 ( add 1 2 3 )
		writeData = 6
end state

@@@
state before cycle 9 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 5
		reg[ 3 ] = 6
		reg[ 4 ] = 7
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 12976137 ( sw 0 6 9 )
		pcPlus1 = 8
	ID/EX pipeline register:
		instruction = 8781834 ( lw 0 6 10 )
		pcPlus1 = 7
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 10
	EX/MEM pipeline register:
		instruction = 12910602 ( sw 0 5 10 )
		branchTarget 16 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 10
		readRegB = -8
	MEM/WB pipeline register:
		instruction = 6356997 ( nor 4 1 5 )
		writeData = -8
	WB/END pipeline register:
		instruction = 720900 ( add 1 3 4 )
		writeData = 7
end state

@@@
state before cycle 10 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = -8
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 5
		reg[ 3 ] = 6
		reg[ 4 ] = 7
		reg[ 5 ] = -8
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 12976137 ( sw 0 6 9 )
		pcPlus1 = 8
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 7 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 10 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8781834 ( lw 0 6 10 )
		branchTarget 17 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 10
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 12910602 ( sw 0 5 10 )
		writeData = 10 (Don't Care)
	WB/END pipeline register:
		instruction = 6356997 ( nor 4 1 5 )
		writeData = -8
end state

@@@
state before cycle 11 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = -8
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 5
		reg[ 3 ] = 6
		reg[ 4 ] = 7
		reg[ 5 ] = -8
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 12976137 ( sw 0 6 9 )
		pcPlus1 = 8
		readRegA = 0
		readRegB = 0
		offset = 9
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 17 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 10 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8781834 ( lw 0 6 10 )
		writeData = -8
	WB/END pipeline register:
		instruction = 12910602 ( sw 0 5 10 )
		writeData = 10 (Don't Care)
end state

@@@
state before cycle 12 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = -8
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 5
		reg[ 3 ] = 6
		reg[ 4 ] = 7
		reg[ 5 ] = -8
		reg[ 6 ] = -8
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 10
	ID/EX pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 9
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 12976137 ( sw 0 6 9 )
		branchTarget 17 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 9
		readRegB = -8
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 10 (Don't Care)
	WB/END pipeline register:
		instruction = 8781834 ( lw 0 6 10 )
		writeData = -8
end state

@@@
state before cycle 13 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = -8
		dataMem[ 10 ] = -8
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 5
		reg[ 3 ] = 6
		reg[ 4 ] = 7
		reg[ 5 ] = -8
		reg[ 6 ] = -8
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 5 ( add 0 0 5 )
		pcPlus1 = 11
	ID/EX pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 10
		readRegA = 0
		readRegB = 0
		offset = 1 (Don't Care)
	EX/MEM pipeline register:
		instruction = 25165824 ( halt )
		branchTarget 9 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 12976137 ( sw 0 6 9 )
		writeData = 9 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 10 (Don't Care)
end state
Machine halted
Total of 14 cycles executed
Final state of machine:

@@@
state before cycle 14 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 655363
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 6356997
		dataMem[ 5 ] = 12910602
		dataMem[ 6 ] = 8781834
		dataMem[ 7 ] = 12976137
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = -8
		dataMem[ 10 ] = -8
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 5
		reg[ 3 ] = 6
		reg[ 4 ] = 7
		reg[ 5 ] = -8
		reg[ 6 ] = -8
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0 ( add 0 0 0 )
		pcPlus1 = 12
	ID/EX pipeline register:
		instruction = 5 ( add 0 0 5 )
		pcPlus1 = 11
		readRegA = 0
		readRegB = 0
		offset = 5 (Don't Care)
	EX/MEM pipeline register:
		instruction = 1 ( add 0 0 1 )
		branchTarget 11 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 12976137 ( sw 0 6 9 )
		writeData = 9 (Don't Care)
end state
